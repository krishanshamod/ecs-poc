name: Application Deployment Workflow

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: development
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          # Token and fetch-depth are used in increase patch version step
          token: ${{ secrets.PIPELINE_PAT }}
          fetch-depth: true
          path: main

      - name: echo
        run: |
          echo "${{ github.workflow }}-${{ github.ref }}"

      - name: Increase Patch Version
        run: |
          cd ./main/.github/workflows/scripts
          chmod +x increment-version.sh
          ./increment-version.sh -v patch
          echo "LATEST_TAG=$(git describe --abbrev=0 --tags 2>/dev/null)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: "GitHub_to_AWS_via_FederatedOIDC"
          aws-region: ${{ secrets.AWS_Region }}

      - name: Configure AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_Region }} | docker login --username AWS --password-stdin ${{ secrets.AWS_Account_ID }}.dkr.ecr.${{ secrets.AWS_Region }}.amazonaws.com

      - name: Build Docker image
        run: |
          cd main
          docker build -t ${{ secrets.ECR_REPOSITORY_URI }}:${{ env.LATEST_TAG }} .

      - name: Vulnerability Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ secrets.ECR_REPOSITORY_URI }}:${{ env.LATEST_TAG }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
          output: "trivy-scan-results.txt"

      - name: Upload Trivy Scan Results Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: trivy-scan-results
          path: trivy-scan-results.txt

      - name: Push Image to ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:${{ env.LATEST_TAG }}
          echo ${{ env.LATEST_TAG }} >> image-tag.txt

      - name: Upload Image Tag Artifact
        uses: actions/upload-artifact@v3
        with:
          name: image-tag
          path: image-tag.txt

      - name: Checkout to IaC repository
        uses: actions/checkout@v3
        with:
          repository: krishanshamod/ecs-poc-iac
          token: ${{ secrets.PIPELINE_PAT }}
          path: ecs-poc-iac

      - name: Update ECS Task Definition Image Tag in IaC repository
        run: |
          cd ecs-poc-iac
          sed -i 's/ecs-poc:[^ ]*/ecs-poc:${{ env.LATEST_TAG }}/' ecs.yaml

      - name: Git Commit & Push Image Version to IaC repository
        run: |
          cd ecs-poc-iac
          git config --global user.name 'krishanshamod'
          git config --global user.email 'krishanshamod@gmail.com'
          git pull origin main
          git add .
          git commit -am "Update image tag to ${{ env.LATEST_TAG }}"
          git push
